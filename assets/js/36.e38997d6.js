(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{625:function(v,l,t){"use strict";t.r(l);var _=t(15),n=Object(_.a)({},(function(){var v=this,l=v.$createElement,t=v._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("ul",[t("li",[t("strong",[v._v("变量提升")]),v._v(" "),t("ul",[t("li",[v._v("var 声明的变量存在变量提升，即变量可以在声明前调用，值为 undefined。")]),v._v(" "),t("li",[v._v("let 和 const 不存在变量提升，变量一定要声明之后才能使用，否则会报错。")])])]),v._v(" "),t("li",[t("strong",[v._v("暂时性死区")]),v._v(" "),t("ul",[t("li",[v._v("var 不存在暂时性死区")]),v._v(" "),t("li",[v._v("let 和 const 存在暂时性死区，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。")])])]),v._v(" "),t("li",[t("strong",[v._v("块级作用域")]),v._v(" "),t("ul",[t("li",[v._v("var 不存在块级作用域")]),v._v(" "),t("li",[v._v("let 和 const 存在块级作用域")])])]),v._v(" "),t("li",[t("strong",[v._v("初始值设置")]),v._v(" "),t("ul",[t("li",[v._v("var 和 let 可以不设置初始值")]),v._v(" "),t("li",[v._v("const 声明变量必须设置初始值")])])]),v._v(" "),t("li",[t("strong",[v._v("重复声明")]),v._v(" "),t("ul",[t("li",[v._v("var 允许重复声明变量")]),v._v(" "),t("li",[v._v("let 和 const 不允许重复声明变量，会抛出 SyntaxError 的错误")])])]),v._v(" "),t("li",[t("strong",[v._v("数据修改")]),v._v(" "),t("ul",[t("li",[v._v("var 和 let 可以修改数据")]),v._v(" "),t("li",[v._v("const 定义的常量是基本数据类型，不能修改。定义的常量要是引用数据类型，就可以修改。因为保存在栈内存的数据是不可以被修改的。而基本数据类型是直接存储在栈内存中的，所以不能被修改。引用数据类型在栈内存中存储的是一个指针，真正的数据存储在指针指向的堆地址，不可被修改的是指针，真正的数据是可变的。")])])]),v._v(" "),t("li",[t("strong",[v._v("重新赋值")]),v._v(" "),t("ul",[t("li",[v._v("var 和 let 声明的变量都可以重新赋值")]),v._v(" "),t("li",[v._v("const 声明的变量不能重新赋值")])])])])])}),[],!1,null,null,null);l.default=n.exports}}]);